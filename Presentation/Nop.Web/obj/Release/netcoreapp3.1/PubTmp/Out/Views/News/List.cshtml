@model NewsItemListModel
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(T("PageTitle.NewsArchive").Text);
    //page class
    Html.AppendPageCssClassParts("html-news-list-page");
}

<section class="bg-light separator-top section-cover">
    <div class="container">
        <div class="row justify-content-left" >
        <div class="col-12 mt-10 text-center">
            <a href="@Url.RouteUrl("NewsRSS", new { languageId = Model.WorkingLanguageId })" 
               class="link-rss" title="@T("News.RSS.Hint")">@T("News.RSS")</a>
         <h1>@T("News")</h1>               
        </div>
        </div>
    </div>
</section>

<section class="bg-light separator-top section-cover">
    <div class="container">
         <div class="row justify-content-between align-items-center">
            <div class="col-md-12 pl-md-5">

                        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.NewsListPageBeforeItems })
        <div class="news-items">
            @foreach (var item in Model.NewsItems)
            {
                <div class="news-item">
                    <div class="news-head">
                        <a class="news-title" href="@Url.RouteUrl("NewsItem", new { SeName = item.SeName })">@item.Title</a>
                        <span class="news-date">-@item.CreatedOn.ToString("D")</span>
                    </div>
                    <div class="news-body">
                        @Html.Raw(item.Short)
                    </div>
                    <div class="buttons">
                        <a href="@Url.RouteUrl("NewsItem", new { SeName = item.SeName })" class="read-more">@T("News.MoreInfo")</a>
                    </div>
                    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.NewsListPageInsideItem, additionalData = item })
                </div>
            }
        </div>
        @{
            var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber");
        }
        @if (!pager.IsEmpty())
        {
            <div class="pager">
                @pager
            </div>
        }
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.NewsListPageAfterItems })


            </div>
          <div class="col-12 mt-4 text-center divider-lg" style="width:initial;"><hr/></div>
        </div>
     </div>
</section>

