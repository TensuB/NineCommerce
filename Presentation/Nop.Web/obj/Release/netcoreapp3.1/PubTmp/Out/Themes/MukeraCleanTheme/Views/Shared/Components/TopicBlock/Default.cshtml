@model TopicModel

@{ /*
  @if (Model.IsPasswordProtected)
  {
  <script asp-location="Footer">
          $(document).ready(function () {
              $('#button-password-@Model.Id').on('click', function() {
                  var postData = {
                      id: $("#topic-@Model.Id").val(),
                      password: $('#password-@Model.Id').val()
                  };
                  addAntiForgeryToken(postData);

                  $.ajax({
                      cache: false,
                      type: "POST",
                      url: "@Url.RouteUrl("TopicAuthenticate")",
                      data: postData,
                      dataType: "json",
                      success: function (data, textStatus, jqXHR) {
                          if (data.Authenticated) {
                              $('#ph-topic-@Model.Id h2#ph-title-@Model.Id').html(data.Title);
                              if ($('#ph-topic-@Model.Id  h2#ph-title-@Model.Id').text().length == 0) {
                                  $('#ph-title-@Model.Id').hide();
                              }
                              $('#ph-topic-@Model.Id .topic-block-body').html(data.Body);
                              $('#ph-password-@Model.Id').hide();
                              $('#ph-topic-@Model.Id').show();
                              //we need to re-run the validation plugin after the content is loaded after successful authentication
                              $.validator.unobtrusive.parse('#ph-topic-@Model.Id');
                          } else {
                              $('#password-error-@Model.Id').text(data.Error).fadeIn("slow");
                              $('#ph-password-@Model.Id #password-@Model.Id').select().focus();
                          }
                      }
                  });
                  return false;
              });
          });

          $(document).ready(function() {
              $('#ph-topic-@Model.Id').hide();
              $('#ph-password-@Model.Id #password-@Model.Id').select().focus();
          });
  </script>


      <div class="topic-password" id="ph-password-@Model.Id">
          <form asp-route="TopicAuthenticate" method="post" autocomplete="off">
              <input asp-for="Id" id="topic-@Model.Id" type="hidden"/>
              <div class="enter-password-title">
                  @T("Topic.EnterPassword")
              </div>
              <div class="enter-password-form">
                  <input name="password" type="password" id="password-@(Model.Id)"/>
                  <input type="submit" id="button-password-@Model.Id" value="@T("Topic.Button")" class="button-1 topic-password-button"/>
              </div>
              <div class="password-error" id="password-error-@Model.Id" style="display: none;"></div>

          </form>
      </div>

       <section class="bg-white separator-top section-cover">
          <div class="container">
              <div class="row justify-content-center" >
                  <div class="topic-block col-12 mt-10 text-center" id="ph-topic-@Model.Id" style="margin-top: -4em !important;">
                       <h2 id="ph-title-@Model.Id">@Model.Title</h2>                   
                  </div>
              </div>
              <div class="row justify-content-center" >
                   <div class="col-md-12 col-lg-8">
                      @Html.Raw(Model.Body)
                  </div>
              </div>
          </div>
      </section>
  }
  else
  {
       @await Component.InvokeAsync("EbookDownloadBox")

      <section class="bg-white separator-top" >
          <div class="container">
              <div class="row justify-content-center" >
                  <div class="topic-block col-12 mt-10 text-center" style="margin-top: -2em !important;">
                       @if (!string.IsNullOrEmpty(Model.Title))
                      {
                      <h2>@Model.Title</h2> 
                      }              
                  </div>
              </div>
              <div class="row justify-content-center" >
                  <div class="col-md-12 col-lg-8">
                      @Html.Raw(Model.Body)
                  </div>
              </div>
          </div>
      </section>

      <section class="bg-green text-white" >
          <div class="container">
              <div class="row justify-content-center">
              <h2>
                  Program homepage promotion section
              </h2>
              </div>
          </div>
      </section>
  }

  @await Component.InvokeAsync("EbookDownloadBox")
  */
}