@model BlogPostModel
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(!string.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Title);
    //meta
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);
    //page class
    Html.AppendPageCssClassParts("html-blogpost-page");
}

<section class="bg-light separator-top section-cover">
    <div class="container">
        <div class="row justify-content-left" >
         @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.BlogPostPageTop, additionalData = Model })
        <div class="col-12 mt-10 text-center">
                <h1>Writing Entry Details</h1>              
        </div>
        </div>
    </div>
</section>

<section class="bg-dark separator-top section-cover">
    <div class="container">
        <div class="row justify-content-left" >
            <div class="col-12 mt-10 text-white">
                <h2>@Model.Title</h2>              
            </div>
            <div class="col-12 mt-4 text-center divider-lg" style="width:initial;"><hr/></div>
                        
            <div class="col-sm-12 col-md-12 col-lg-9 text-white">
                <div class="post-date">
                    @Model.CreatedOn.ToString("D")
                </div>
                @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.BlogPostPageBeforeBody, additionalData = Model })
                <div class="post-body">
                    @Html.Raw(Model.Body)
                </div>
        @if (Model.Tags.Count > 0)
        {
            <div class="tags">
                <label>@T("Blog.Tags"):</label>
                <ul>
                    @for (var i = 0; i < Model.Tags.Count; i++)
                    {
                        var tag = Model.Tags[i];
                        <li><a href="@Url.RouteUrl("BlogByTag", new {tag = tag})">@tag</a></li>
                        if (i != Model.Tags.Count - 1)
                        {
                            <li class="separator">,</li>
                        }
                    }
                </ul>
            </div>
        }
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.BlogPostPageBeforeComments, additionalData = Model })

            </div>
            <div class="col-sm-12 col-md-12 col-lg-3">
                @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.LeftSideColumnBlogBefore })
                @await Component.InvokeAsync("BlogTags")
                @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.LeftSideColumnBlogAfter })
            </div>              

            <div class="col-sm-12 col-md-10 col-lg-12">
                 <div>&nbsp;</div>
                <hr/>
            </div>

            <div class="col-sm-12 col-md-10 col-lg-12 text-center" >
                <ul class="list-inline mb-0">
                    <li class="list-inline-item">
                        <a href="#"><i class="icon-facebook-square fs-20"></i></a>
                    </li>
                    <li class="list-inline-item">
                        <a href="#"><i class="icon-linkedin-square fs-20"></i></a>
                    </li>
                    <li class="list-inline-item">
                        <a href="#"><i class="icon-twitter-square fs-20"></i></a>
                    </li>
                    <li class="list-inline-item">
                        <a href="#"><i class="icon-instagram fs-20"></i></a>
                    </li>
                    <li class="list-inline-item">
                        <a href="#"><i class="icon-pinterest-square fs-20"></i></a>
                    </li>
                </ul>
            </div>

            <div class="col-sm-12 col-md-10 col-lg-12 text-white text-right" style="padding-left:0px; padding-right:0px;">
                <div>&nbsp;</div>
                <hr/>
                 <div>&nbsp;</div>
                <div class="buttons" style="float:right;">
                   <a class="btn btn-white btn-rounded btn-block" 
                      href="@Url.RouteUrl("BlogByTag", new {tag = Model.Tags.FirstOrDefault()})">
                            Back to @Model.Tags.FirstOrDefault() writing
                   </a>                
                </div>
            </div>
        </div>
    </div>
</section>


