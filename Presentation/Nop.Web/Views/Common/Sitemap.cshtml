@model SitemapModel
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Sitemap").Text);
    //page class
    Html.AppendPageCssClassParts("html-sitemap-page");
}

<section class="bg-gray-dark separator-top text-white" 
         style="background-image: url('../Themes/MukeraCleanTheme/Content/images/header-backgrounds/mystory-header-background-11.png');
                background-blend-mode: soft-light;">
    <div class="container">
        <div class="row justify-content-left" >
            <div class="col-12 text-center text-dark" 
                 style="background-color:brown; padding:1em; padding-bottom:4em; opacity:0.85; border-radius:4px;">
                <div class="col-12">
                    <h1><b>@T("Sitemap")</b></h1>
                </div> 
                <div class="col-md-5"></div> 
                <div class="col-md-2"><p>&nbsp;</p><hr/></div> 
                <div class="col-md-5"></div> 
                <div class="col-md-12">         
                    <h3>Pages <icon class="fa-circle subheadingseparator"></icon> Nav links per page
                    </h3>               
                </div> 
            </div>
        </div>
    </div>
</section>

<section class="bg-light separator-top section-cover">
    <div class="container">
         <div class="row justify-content-between align-items-center">
            <div class="col-md-12 pl-md-5">
                <h2> Description</h2>
                    <div class="description">
                        @T("Sitemap.Description")
                    </div>
                <div class="col-12 mt-4 text-center divider-lg" style="width:initial;"><hr/></div>

                        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.SitemapBefore })
        @foreach (var itemGroup in Model.Items.GroupBy(itemGroup => itemGroup.GroupTitle))
        {
            <div class="entity">
                <div class="entity-title">
                    <h2>@itemGroup.Key</h2>
                </div>
                <div class="entity-body">
                    <ul>
                        @foreach (var item in itemGroup.ToList())
                        {
                            <li><a href="@item.Url">@item.Name</a></li>
                        }
                    </ul>
                </div>
            </div>
        }
        @{
            var pager = Html.Pager(Model.PageModel).QueryParam("pagenumber");
            if (!pager.IsEmpty())
            {
                <div class="pager">
                    @pager
                </div>
            }
        }
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.SitemapAfter })
      


            </div>
          <div class="col-12 mt-4 text-center divider-lg" style="width:initial;"><hr/></div>
        </div>
     </div>
</section>
