@model BlogPostListModel
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Blog").Text);
    //page class
    Html.AppendPageCssClassParts("html-blog-page");
}

<!-- blog -->
<section class="bg-white text-dark">    
      <div class="container">
            <div class="row text-center" >
                <div class="col-12" >
                        <h1>@Model.PagingFilteringContext.Subcategory</h1>
                </div>
            </div>
      </div>   
</section>

<!-- Breacdcrumb section - start -->
    <section class="bg-light" style="background-color: #f5f5f5; padding:0rem;">
      <div class="container">
        <div class="row">
          <div class="col-sm-12 col-md-12 col-lg-12 text-black-50 text-center">

              <nav aria-label="breadcrumb">
                  <ol class="breadcrumb">
                    <li class="breadcrumb-item" >
                      <a class="nav-link"   role="button" href="@Url.RouteUrl("Homepage")">@T("Homepage") </a>
                    </li>

                    <li class="breadcrumb-item">
                      <a class="nav-link"   role="button" href="@Url.RouteUrl("BlogsByTagList")"> Writing </a>
                    </li>

                    <li class="breadcrumb-item" >
                        <a class="nav-link"   role="button" 
                           href="@Url.RouteUrl("BlogTagBySubcategory", new { tag =  @Model.PagingFilteringContext.Tag })"> 
                           @Model.PagingFilteringContext.Tag 
                        </a>
                    </li>

                    <li class="breadcrumb-item active" aria-current="page">
                      <span style="padding-left: 0.25em; font-size: 2.25em;">@Model.PagingFilteringContext.Subcategory </span>
                    </li>
                  </ol>
              </nav>
          </div>
        </div>
      </div>    
    </section>       
<!-- Breacdcrumb section - end -->

<section class="bg-gray-dark separator-top section-cover">
  <div class="container">
    <div class="row justify-content-center" id="writingHeaderSection">

     <div class="col-lg-12 text-gray-dark text-left">
            @if(Model.BlogPostSubCategoriesByCount.Count() > 0)
            {            
                 foreach(var item in Model.BlogPosts)
                {           

                     <div class="post col bg-gray-light" 
                          style="display: inline-block; margin-bottom: 2em; margin-top:1em; padding: 1em 1.95em; padding-bottom:2.5em;">
                        <div class="post-head">
                             <h2> @item.Title </h2>     
                            <span class="post-date">@item.CreatedOn.ToString("D")</span>
                            <div>&nbsp;</div>
                        </div>

                        <div class="col-sm-12 col-md-8 col-lg-10 text-center text-md-left" 
                                style="padding-left: 0px; line-height: 2.125; letter-spacing: 0.048em;">
                                @Html.Raw(!string.IsNullOrEmpty(item.BodyOverview) ? item.BodyOverview : item.Body)
                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-2" data-aos="zoom-in">
                            <div class="presentation-circle">
                                <figure style="background-image: url('../Themes/MukeraCleanTheme/Content/assets/images/demo/learning/plant-based-program-image-4.png')"></figure>
                            </div>
                        </div>   
                         
                        <div class="col-sm-12 col-md-10 col-lg-12 text-white text-right" style=" margin-top:1em; :0px; padding-right:0px;"> 
                            <hr class="text-gray-dark"/>
                        <div class="buttons" style="float:right; padding-right:1em;">
                           <a href="@Url.RouteUrl("BlogPost", 
                                                    new {
                                                            SeName = item.SeName, 
                                                            blogPostId = item.Id,
                                                            tag = Model.PagingFilteringContext.Tag,
                                                            subcategory = Model.PagingFilteringContext.Subcategory
                                                        })" 
                              class="btn btn-green btn-rounded">Read More</a>                            
                        </div>                    
                    </div>                     
                     </div>

                 }

            }
            else
            {
                <p>
                 No writing subcategories are found for the @Model.PagingFilteringContext.Tag!
                </p>
            }

        </div>

    </div>
  </div>             
            
</section>
<!-- / blog -->

