@model BlogPostModel
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(!string.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Title);
    //meta
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);
    //page class
    Html.AppendPageCssClassParts("html-blogpost-page");
}

<section class="bg-gray-dark separator-top text-white" 
         style="background-image: url('/Themes/MukeraCleanTheme/Content/images/header-backgrounds/writing-page-header-background.png');
                background-blend-mode: soft-light;">    
      <div class="container">
            <div class="row justify-content-left" >
                <div class="col-12 text-center text-dark" 
                     style="background-color:brown; padding:1em; padding-bottom:4em; opacity:0.85; border-radius:4px;">
                        <h1><b>@Model.Title</b></h1>
                    <div class="col-lg-5"></div> <div class="col-lg-2"><hr/></div> <div class="col-lg-5"></div> 
                    <div class="col-lg-12">
                        <h3> sub heading <icon class="fa-circle subheadingseparator"></icon> sub heading </h3>
                    </div> 
                </div>
            </div>
      </div>   
</section>
<!-- Breacdcrumb section - start -->
    <section class="bg-light" style="background-color: #f5f5f5; padding:0rem;">
      <div class="container">
        <div class="row">
          <div class="col-sm-12 col-md-12 col-lg-12 text-black-50 text-center">

              <nav aria-label="breadcrumb">
                  <ol class="breadcrumb" style="padding: 1.5em;">
                    <li class="breadcrumb-item" style="font-size: 1.75em;">
                      <a class="nav-link" style="font-size: 1.5em;" role="button" href="@Url.RouteUrl("Homepage")">@T("Homepage") </a>
                    </li>

                    <li class="breadcrumb-item" style="font-size: 1.75em;">
                      <a class="nav-link" style="font-size: 1.5em;" role="button" href="@Url.RouteUrl("BlogsByTagList")"> Writing </a>
                    </li>

                    <li class="breadcrumb-item" style="font-size: 1.75em;">
                        <a class="nav-link" style="font-size: 1.5em;" role="button"
                           href="@Url.RouteUrl("BlogTagBySubcategory", new { tag = @Model.TopCategory })">
                            @Model.TopCategory
                        </a>
                    </li>
                    <li class="breadcrumb-item" style="font-size: 1.75em;">
                        <a class="nav-link" style="font-size: 1.5em;" role="button" 
                           href="@Url.RouteUrl("BlogTagBySubcategory", new { tag = @Model.SubCategory })"> 
                          @Model.SubCategory
                        </a>
                    </li>
                    <li class="breadcrumb-item active" style="font-size: 1.75em;" aria-current="page">
                      <span style="padding-left: 0.25em; font-size: 1.5em;">@Model.Title </span>
                    </li>
                  </ol>
              </nav>
          </div>
        </div>
      </div>    
    </section>       
<!-- Breacdcrumb section - end -->

<section class="bg-gray-darkest">
    <div class="container">
        <div class="row justify-content-left" >
              
        <div class="col-lg-12 text-white text-center">
            <h2><b>@Model.Title</b></h2>
            <div class="col-lg-5"></div> <div class="col-lg-2"><hr/></div> <div class="col-lg-5"></div>               
        </div>

        <div class="col-sm-12 col-md-12 col-lg-9 bg-gray-light text-gray-dark" style="padding: 2.5em 3em; margin-top:1em;">
                <div class="post-date">
                    @Model.CreatedOn.ToString("D")
                </div>
                @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.BlogPostPageBeforeBody, additionalData = Model })
                <div class="post-body">
                    @Html.Raw(Model.Body)
                </div>
                <hr/>
                @if (Model.Tags.Count > 0)
                {
                    <div class="tags">
                        <label>@T("Blog.Tags"):</label>
                        <ul>
                            @for (var i = 0; i < Model.Tags.Count; i++)
                            {
                                var tag = Model.Tags[i];
                                <li><a href="@Url.RouteUrl("BlogByTag", new {tag = tag})">@tag</a></li>
                                if (i != Model.Tags.Count - 1)
                                {
                                    <li class="separator">,</li>
                                }
                            }
                        </ul>
                    </div>
                }
                @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.BlogPostPageBeforeComments, additionalData = Model })
            </div>

            <div class="col-sm-12 col-md-12 col-lg-3 bg-gray text-gray-dark" style="margin-top: 1em;">
                @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.LeftSideColumnBlogBefore })
                @await Component.InvokeAsync("BlogTags")
                @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.LeftSideColumnBlogAfter })
            </div>           

            <div class="col-sm-12 col-md-10 col-lg-10 text-center text-white" style="margin-top:3em;">
                    <ul class="socials">
                        <li class="list-inline-item"><a href="https://www.facebook.com/barry.toole.146" class="icon-facebook text-facebook fs-20"></a></li>
                        <li class="list-inline-item"><a href="" class="icon-instagram text-instagram fs-20"></a></li>
                        <li class="list-inline-item"><a href="" class="icon-twitter text-twitter fs-20"></a></li>
                        <li class="list-inline-item"><a href="" class="icon-linkedin text-linkeding fs-20"></a></li>
                        <li class="list-inline-item"><a href="" class="icon-pinterest-square text-pinterest fs-20"></a></li>   
                    </ul>
            </div>
            <div class="col-sm-12 col-md-10 col-lg-12 text-white text-right" style="padding-left:0px; padding-right:0px;">
                <div>&nbsp;</div>
                <hr/>
                 <div>&nbsp;</div>
                <div class="buttons" style="float:right;">  
                    
                    <a class="btn btn-white btn-rounded btn-block" 
                      href="@Url.RouteUrl("BlogTagBySubcategory", new {tag = Model.Tags.FirstOrDefault()})">
                            Back to @Model.Tags.FirstOrDefault() List
                   </a>  
      
                </div>
            </div>
        </div>
    </div>
</section>


