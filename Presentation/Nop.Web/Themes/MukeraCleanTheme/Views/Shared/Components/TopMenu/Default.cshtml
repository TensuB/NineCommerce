@model TopMenuModel

    <div class="container" style=" padding-bottom: 1.05em !important;" >
        <nav class="navbar navbar-expand-lg navbar-light">
            <!-- Logo / business name -->
            @await Component.InvokeAsync("Logo")
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
                    aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="burger"><span></span></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <!-- Top Menu Links List -->
                <ul class="navbar-nav align-items-center mr-auto">
                    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderMenuBefore })

    @if (Model.DisplayHomepageMenuItem)
    {
        <li class="nav-item">
            <a class="nav-link" role="button" href="@Url.RouteUrl("Homepage")">@T("Homepage") </a>
        </li>
    }

    <li class="nav-item dropdown dropdown-mega">
        <a class="nav-link dropdown-toggle" id="navbarDropdown-1" role="button" data-toggle="dropdown" aria-haspopup="true" 
           aria-expanded="false" href="@Url.RouteUrl("AboutUs")">@T("About").Text</a>
        <div class="dropdown-menu" aria-labelledby="navbarDropdown-1">
            <div class="row">
                <div class="col">
                    <ul class="mega-list">
                        <li class="nav-item"><a class="nav-link" role="button" href="@Url.RouteUrl("MyStory")">@T("My Story")</a></li>
                        <li class="nav-item"><a class="nav-link" role="button" href="@Url.RouteUrl("MyVision")">@T("My Vision")</a></li>
                        <li class="nav-item"><a class="nav-link" role="button" href="@Url.RouteUrl("ContactUs")">@T("Contact Us")</a></li>
                        <li class="nav-item"><a class="nav-link" role="button" href="@Url.RouteUrl("Connect")">@T("Connect")</a></li>
                    </ul> 
                </div>
            </div>
        </div>
    </li>

    <!-- Topics (Program, Writing, Speaking) List Link -->
    <li class="nav-item"><a href="@Url.RouteUrl("Program")" class="nav-link">@T("Program")</a></li>
    <li class="nav-item dropdown dropdown-mega">
        <a class="nav-link dropdown-toggle" id="navbarDropdown-2" role="button" data-toggle="dropdown" 
           aria-haspopup="true" aria-expanded="false" href="@Url.RouteUrl("News")">
            @T("Writings").Text
        </a>
        <div class="dropdown-menu" aria-labelledby="navbarDropdown-2">
            <div class="row">
                <div class="col">
                    <ul class="mega-list">
                        <li class="nav-item"><a class="nav-link" role="button" href="@Url.RouteUrl("Diet")">@T("Diet")</a></li>
                        <li class="nav-item"><a class="nav-link" role="button" href="@Url.RouteUrl("Nutrition")">@T("Nutrition")</a></li>
                        <li class="nav-item"><a class="nav-link" role="button" href="@Url.RouteUrl("Health")">@T("Health")</a></li>
                        <li class="nav-item"><a class="nav-link" role="button" href="@Url.RouteUrl("LifeStyle")">@T("Life Style")</a></li>
                    </ul>  
                </div>
            </div>
        </div>
    </li>
     <li class="nav-item"><a href="@Url.RouteUrl("Speaking")" class="nav-link">@T("Speaking")</a></li>
    <!--
        foreach (var topic in Model.Topics)
        {
            <li class="nav-item">
                <a href="Url.RouteUrl("Topic", new { SeName = topic.SeName })" class="nav-link">topic.Name</a>
            </li>
        }
    -->

    @if (Model.DisplayCustomerInfoMenuItem)
    {
        <!-- Sign In link-->
        <li class="nav-item"><a href="@Url.RouteUrl("CustomerInfo")" class="nav-link">@T("Account.MyAccount")</a></li>
    }

    @if (Model.DisplayProductSearchMenuItem)
    {
        <li class="nav-item">
            <a href="@Url.RouteUrl("ProductSearch")" class="nav-link">
                <i class="fa fa-search" aria-hidden="true"></i>
            </a>
        </li>
    }

    <!-- Shopping Cart 
    <li class="nav-item">
        <a href="Url.RouteUrl("Cart")" class="nav-link"><i class="fa fa-shopping-cart" aria-hidden="true"></i></a>
        await Component.InvokeAsync("FlyoutShoppingCart")
    </li>
    -->
    <!--
    if (!Model.UseAjaxMenu)
    {
        var rootCategories = Model.Categories.Where(x => x.IncludeInTopMenu).ToList();
        foreach (var category in rootCategories)
        {
            var categoryLineModel = new TopMenuModel.CategoryLineModel
            {
                Category = category
            };

            await Html.PartialAsync("_CategoryLine.TopMenu", categoryLineModel)
        }
    }

    if(Model.NewProductsEnabled && Model.DisplayNewProductsMenuItem)
    {
        <li class="nav-item">
            <a href="Url.RouteUrl("NewProducts")" class="nav-link">T("Products.NewProducts")</a>
        </li>
    }
    if(Model.BlogEnabled && Model.DisplayBlogMenuItem)
    {
        <li class="nav-item"><a href="Url.RouteUrl("Blog")" class="nav-link">T("Blog")</a></li>
    }
    if(Model.ForumEnabled && Model.DisplayForumsMenuItem)
    {
        <li class="nav-item"><a href="Url.RouteUrl("Boards")" class="nav-link">T("Forum.Forums")</a></li>
    }-->
                    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderMenuAfter })
                </ul>
            </div>
        </nav>
    </div>

  
    @if (Model.UseAjaxMenu)
    {
        <script asp-location="Footer">
        $(document).ready(function () {
            $('.menu-toggle').on('click', function () {
                $(this).siblings('.top-menu.mobile').slideToggle('slow');
            });
            var localized_data = {
                AjaxFailure: "@T("MainMenu.AjaxFailure")"
            };
            mainMenu.init('@Url.RouteUrl("GetCatalogRoot")', '@Url.RouteUrl("GetCatalogSubCategories")', 'ul.top-menu.notmobile', 'ul.top-menu.mobile', localized_data);
        });
        </script>

        Html.AppendScriptParts(ResourceLocation.Footer, "~/js/public.menu.js");
    }
    else
    {
        <script asp-location="Footer">
            $(document).ready(function () {
                $('.menu-toggle').on('click', function () {
                    $(this).siblings('.top-menu.mobile').slideToggle('slow');
                });
                $('.top-menu.mobile .sublist-toggle').on('click', function () {
                    $(this).siblings('.sublist').slideToggle('slow');
                });
            });
        </script>
    }

