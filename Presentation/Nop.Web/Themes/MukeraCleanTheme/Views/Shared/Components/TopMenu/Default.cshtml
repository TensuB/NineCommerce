@model TopMenuModel
    <div class="container" style=" padding-bottom: 1.05em !important;" >
        <nav class="navbar navbar-expand-lg navbar-light">
            <!-- Logo / business name -->
            @await Component.InvokeAsync("Logo")
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
                    aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="burger"><span></span></span>
            </button>

        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <!-- Top Menu Links List -->
            <ul class="navbar-nav align-items-center mr-auto" style="margin-top: 1.5em !important;">
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderMenuBefore })

            @if (Model.DisplayHomepageMenuItem)
            {
                <li class="nav-item">
                    <a class="nav-link" role="button" href="@Url.RouteUrl("Homepage")">@T("Homepage") </a>
                </li>
            }

                <li class="nav-item dropdown dropdown-mega">
                    <a class="nav-link dropdown-toggle" id="navbarDropdown-1" role="button" data-toggle="dropdown" aria-haspopup="true" 
                       aria-expanded="false" href="@Url.RouteUrl("AboutUs")">@T("About").Text</a>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdown-1">
                          <a class="dropdown-item" href="@Url.RouteUrl("MyStory")">
                            <span>@T("My Story")</span>
                          </a>
                          <div class="dropdown-divider"></div>

                          <a class="dropdown-item" href="@Url.RouteUrl("MyVision")">
                            <span>@T("My Vision")</span>
                          </a>
                          <div class="dropdown-divider"></div>

                          <a class="dropdown-item" href="@Url.RouteUrl("ContactUs")">
                            <span>@T("Contact Us")</span>
                          </a>
                          <div class="dropdown-divider"></div>
                          <a class="dropdown-item" href="@Url.RouteUrl("Connect")">
                            <span>@T("Connect")</span>
                          </a>
                    </div>
                </li>

                <!-- Topics (Program, Writing, Speaking) List Link -->
                <li class="nav-item"><a href="@Url.RouteUrl("Program")" class="nav-link">@T("Program")</a></li>
                <li class="nav-item dropdown dropdown-mega">
                    <a class="nav-link dropdown-toggle" id="navbarDropdown-2" role="button" data-toggle="dropdown" 
                       aria-haspopup="true" aria-expanded="false" href="@Url.RouteUrl("News")">
                        @T("Writings").Text
                    </a>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdown-2">

                    <a class="dropdown-item"  href="@Url.RouteUrl("Diet")">
                    <span>@T("Diet")</span>
                    </a>
                    <div class="dropdown-divider"></div>

                    <a class="dropdown-item" href="@Url.RouteUrl("Nutrition")">
                    <span>@T("Nutrition")</span>
                    </a>
                    <div class="dropdown-divider"></div>

                    <a class="dropdown-item" href="@Url.RouteUrl("Health")">
                    <span>@T("Health")</span>
                    </a>
                    <div class="dropdown-divider"></div>
                    <a class="dropdown-item" href="@Url.RouteUrl("LifeStyle")">
                    <span>@T("Life Style")</span>
                    </a>
                    </div>
                </li>
                 <li class="nav-item"><a href="@Url.RouteUrl("Speaking")" class="nav-link">@T("Speaking")</a></li>

            @if (Model.DisplayCustomerInfoMenuItem)
            {
                <!-- Sign In link-->
                <li class="nav-item"><a href="@Url.RouteUrl("CustomerInfo")" class="nav-link">@T("Account.MyAccount")</a></li>
            }

            @if (Model.DisplayProductSearchMenuItem)
            {
                <li class="nav-item">
                    <a href="@Url.RouteUrl("ProductSearch")" class="nav-link">
                        <i class="fa fa-search" aria-hidden="true"></i>
                    </a>
                </li>
            }

            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderMenuAfter })
            </ul>
            </div>
        </nav>
    </div>

  
    @if (Model.UseAjaxMenu)
    {
        <script asp-location="Footer">
        $(document).ready(function () {
            $('.menu-toggle').on('click', function () {
                $(this).siblings('.top-menu.mobile').slideToggle('slow');
            });
            var localized_data = {
                AjaxFailure: "@T("MainMenu.AjaxFailure")"
            };
            mainMenu.init('@Url.RouteUrl("GetCatalogRoot")', '@Url.RouteUrl("GetCatalogSubCategories")', 'ul.top-menu.notmobile', 'ul.top-menu.mobile', localized_data);
        });
        </script>

        Html.AppendScriptParts(ResourceLocation.Footer, "~/js/public.menu.js");
    }
    else
    {
        <script asp-location="Footer">
            $(document).ready(function () {
                $('.menu-toggle').on('click', function () {
                    $(this).siblings('.top-menu.mobile').slideToggle('slow');
                });
                $('.top-menu.mobile .sublist-toggle').on('click', function () {
                    $(this).siblings('.sublist').slideToggle('slow');
                });
            });
        </script>
    }

